import UserLayout from "@/components/Layout/UserLayout";
import React, { ReactElement, useEffect } from "react";
import { useNavBar } from "@/store/navbar/useNavBar";
import { MdShoppingCartCheckout } from "react-icons/md";
import { useCart } from "@/store/cart/useCart";
import Modal from "@/components/Modal/Modal";
import Head from "next/head";
import { NextPageWithLayout } from "@/pages/_app";
import CheckoutCard from "@/components/Cart/CheckoutCard";
import CourierService from "@/components/Cart/CourierService";
import { ManageCheckOut } from "@/components/Cart/ManageCheckOut";
import { Skeleton } from "@/components/ui/skeleton";
import { ManageMobileCheckOut } from "@/components/Cart/ManageMobileCheckOut";
import ModalUpSlide from "@/components/Modal/ModalUpSlide";
import { useUser } from "@/store/user/useUser";
import ButtonWithLoading from "@/components/Button/ButtonWithLoading";
import { useRouter } from "next/router";
import { Button } from "@/components/ui/button";
import { useModal } from "@/store/modal/useModal";
import AddressCheckoutList from "@/components/Cart/AddressCheckoutList";
import AddressList from "@/components/UserAddress/AddressList";

const CheckoutPage: NextPageWithLayout = () => {
  const navHeight = useNavBar.use.navHeight();
  const { multiCartAmount, getInitialValue, groupedCart } = useCart();
  const { showModal } = useModal.getState();
  const defaultAddress = useUser.use.defaultAddress();
  const router = useRouter();

  const showChangeDefaultAddress = () => {
    showModal(<AddressCheckoutList />);
  };

  useEffect(() => {
    getInitialValue();
  }, []);

  if (!multiCartAmount) {
    return (
      <>
        <Head>
          <title>Checkout | Platypus</title>
          <meta name="platypus" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/vm4/favicon.ico" />
        </Head>
        <main className="min-w-screen min-h-screen gap-3 px-3 pb-10 pt-16 md:px-28 md:pt-36 2xl:px-72 ">
          <div className="mb-5 flex items-center gap-3 text-4xl text-primary">
            <h1 className=" text-4xl font-bold  ">Checkout</h1>
            <MdShoppingCartCheckout className=" justify-start" />
          </div>
          <div className="flex h-full w-full gap-5">
            <div className="h-full w-full flex-[2] gap-4 space-y-3">
              <Skeleton className="h-24 w-full" />
              <Skeleton className="h-24 w-full" />
              <Skeleton className="h-24 w-full" />
              <Skeleton className="h-24 w-full" />
              <Skeleton className="h-24 w-full" />
              <Skeleton className="h-24 w-full" />
            </div>
            <div className="h-full w-full flex-1">
              <Skeleton className="h-80 w-full" />
            </div>
          </div>
        </main>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>Checkout | Platypus</title>
        <meta name="platypus" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/vm4/favicon.ico" />
      </Head>
      <main className="min-w-screen min-h-screen gap-3 px-3 pb-10 pt-16 md:px-28 md:pt-36 2xl:px-72 ">
        <ModalUpSlide backDropClose />
        <Modal backDropClose />
        <div className="mb-5 flex items-center gap-3 text-4xl text-primary">
          <h1 className=" text-4xl font-bold  ">Checkout</h1>
          <MdShoppingCartCheckout className=" justify-start" />
        </div>

        <div className="w-full">
          <section
            id="section1"
            style={{ minHeight: `calc(100vh - ${navHeight}px)` }}
            className="section lg:relative lg:flex lg:gap-3"
          >
            <div className="flex flex-1 flex-col gap-3">
              <div>
                {defaultAddress ? (
                  <div className="rounded-lg border-[1px] border-primary p-3">
                    <Button className="mb-5" onClick={showChangeDefaultAddress}>
                      Change Default Address
                    </Button>
                    {defaultAddress &&
                      defaultAddress.map((address) => {
                        return (
                          <AddressList
                            isActive={address.is_default}
                            key={address.id}
                            addressData={address}
                          />
                        );
                      })}
                  </div>
                ) : (
                  <div className="rounded-lg border-[1px] border-primary p-3">
                    <p className="text-center font-bold text-primary">
                      {`You don't have an account address yet, add it first`}
                    </p>
                    <ButtonWithLoading
                      onClick={() => {
                        router.push("/user/address");
                      }}
                      variant="destructive"
                      buttonContent={"Go to address settings"}
                      className="mt-3 w-full"
                    />
                  </div>
                )}
              </div>
              {groupedCart.map((group) => (
                <div
                  key={group.merchant_id}
                  className="flex flex-col rounded-lg border-[1px] border-border p-3 shadow-md lg:p-5"
                >
                  <div>
                    <div className="flex">
                      <div>
                        <p className="mb-3 mt-3 font-bold lg:text-lg">
                          {group.merchant_name}
                        </p>
                      </div>
                    </div>
                    <div>
                      {multiCartAmount.map((cartItem) => {
                        if (cartItem.merchant_id === group.merchant_id) {
                          return (
                            <CheckoutCard
                              key={cartItem.cart_product_id}
                              itemAmount={cartItem}
                            />
                          );
                        }
                      })}
                    </div>
                  </div>
                  <button className="my-5 w-fit flex-1 self-end max-lg:w-full">
                    <CourierService groupedCart={group} />
                  </button>
                </div>
              ))}
            </div>
            <ManageMobileCheckOut />
            <div
              style={{ top: `${navHeight + 20}px` }}
              className={`left-0 hidden h-fit w-full rounded-lg border-[1px] border-border bg-background shadow-md lg:sticky lg:block lg:h-fit lg:w-64 xl:w-80`}
            >
              <ManageCheckOut />
            </div>
          </section>
        </div>
      </main>
    </>
  );
};

export default CheckoutPage;

CheckoutPage.getLayout = function getLayout(page: ReactElement) {
  return <UserLayout>{page}</UserLayout>;
};
