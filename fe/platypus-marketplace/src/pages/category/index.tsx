import React, { ReactElement } from "react";
import UserLayout from "@/components/Layout/UserLayout";
import CategoryIcon from "@/components/CategoryIcon/CategoryIcon";
import { GetServerSideProps } from "next";
import { ICategory } from "@/pages";
import Link from "next/link";
import { GrFormNextLink } from "react-icons/gr";
import { setOthersToLast } from "@/utils/uniUtils";
import Head from "next/head";

export interface ICategoryProps {
  category: ICategory[];
}

const Category = ({ category }: ICategoryProps) => {
  setOthersToLast(category);
  return (
    <>
      <Head>
        <title>Categories | Platypus</title>
        <meta name="platypus" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/vm4/favicon.ico" />
      </Head>
      <main className="min-w-screen flex flex-col items-center pt-12 md:px-28 md:pt-28 2xl:px-72">
        <div className="w-[93%] md:w-full">
          <div className="mb-10 mt-5 w-full">
            <div className="flex items-center gap-2">
              <Link
                href={`/`}
                className="font-semibold text-primary hover:text-black"
              >
                Home
              </Link>
              <GrFormNextLink />
              <Link
                href={`#`}
                className="font-semibold text-primary hover:text-black"
              >
                Categories
              </Link>
              <GrFormNextLink />
            </div>
            <div className="mb-5 items-center md:flex md:w-full md:justify-between">
              <hr className="invisible flex-1 md:visible" />
              <div className=" md:rounded-full md:border">
                <h2 className="text-lg font-medium md:px-2">Categories</h2>
              </div>
              <hr className="invisible flex-1 md:visible" />
            </div>
            <div className="grid grid-cols-3 justify-evenly gap-2 gap-y-3 p-5 md:grid-cols-5 md:gap-y-10 md:p-10 lg:justify-start xl:grid-cols-7">
              {category.map((item: ICategory) => {
                return (
                  <CategoryIcon
                    key={item.id}
                    label={item.name}
                    icon={item.icon}
                    id={item.id}
                  />
                );
              })}
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

Category.getLayout = function getLayout(page: ReactElement) {
  return <UserLayout>{page}</UserLayout>;
};

export const getServerSideProps: GetServerSideProps = async () => {
  const responseCategory = await fetch(
    `${process.env.BASE_API_URL}/categories`,
  );
  const resultJSONCategory = await responseCategory.json();
  const category = resultJSONCategory.data;
  return {
    props: {
      category,
    },
  };
};

export default Category;
