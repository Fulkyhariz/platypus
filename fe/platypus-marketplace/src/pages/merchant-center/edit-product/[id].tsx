import React, { ReactElement, useEffect, useState } from "react";
import UserSellerLayout from "@/components/Layout/UserSellerLayout";
import { EditProductForm } from "@/components/Form/EditProductForm";
import service from "@/services/services";
import { useLoading } from "@/store/loading/useLoading";
import { GetServerSideProps } from "next";
import { IProdDetailEditData } from "@/interfaces/productDetail";
import Head from "next/head";

interface IEditProductById {
  id: string;
}

const EditProductById = ({ id }: IEditProductById) => {
  const { showLoading, hideLoading } = useLoading.getState();
  const [editProductData, setEditProductData] = useState<IProdDetailEditData>();

  useEffect(() => {
    showLoading();
    const getProductEdit = async () => {
      const { error, data } = await service.getUserProductEdit(id as string);

      if (error) {
        hideLoading();
      } else {
        setEditProductData(data.data);
        hideLoading();
      }
    };

    getProductEdit();
  }, []);

  if (!editProductData) {
    return null;
  }

  return (
    <>
      <Head>
        <title>Edit Product | Seller Platypus</title>
        <meta name="platypus" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/vm4/favicon.ico" />
      </Head>
      <main className="min-w-screen flex min-h-screen flex-col px-3 lg:ml-[20vw] lg:px-32">
        <EditProductForm editProductData={editProductData} />
      </main>
    </>
  );
};

EditProductById.getLayout = function getLayout(page: ReactElement) {
  return <UserSellerLayout>{page}</UserSellerLayout>;
};

export default EditProductById;

export const getServerSideProps: GetServerSideProps = async ({
  params,
}: any) => {
  return {
    props: {
      id: params.id,
    },
  };
};
